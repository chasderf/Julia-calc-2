julia> using CalculusWithJulia

julia> using Plots

julia> using SymPy

julia> using QuadGK

julia> @syms x
(x,)
julia> F = integrate(2 * PI * x^2 * sqrt(1 + (2x)^2), x)
    ⎛       5                 3                                     ⎞
    ⎜      x               3⋅x                x           asinh(2⋅x)⎟
2⋅π⋅⎜───────────── + ─────────────── + ──────────────── - ──────────⎟
    ⎜   __________        __________         __________       64    ⎟
    ⎜  ╱    2            ╱    2
╱    2                  ⎟
    ⎝╲╱  4⋅x  + 1    8⋅╲╱  4⋅x  + 1    32⋅╲╱  4⋅x  + 1              ⎠

julia> F(1) - F(0)
    ⎛  asinh(2)   9⋅√5⎞
2⋅π⋅⎜- ──────── + ────⎟
    ⎝     64       32 ⎠

julia> g(u) = 6 + 2sin(u)
g (generic function with 1 method)

julia> f(u) = 2cos(u)
f (generic function with 1 method)

julia> a, b = 0, 2pi
(0, 6.283185307179586)

julia> us = range(a, b, length=100)
0.0:0.06346651825433926:6.283185307179586
julia> plot(g.(us), f.(us), xlims=(-0.5, 9),aspect_ratio=:equal, legend=false)
julia> plot!([0,0], [-3,3], color=:red, linewidth=5)
julia> plot!([3,9], [0,0], color=:green, linewidth=5)
julia> S(u,v) =: [g(u)*cos(v), g(u)*sin(v), f(u)]
ERROR: syntax: whitespace not allowed after ":" used for quoting
Stacktrace:
 [1] top-level scope
   @ none:1
julia> S(u,v) = [g(u)*cos(v), g(u)*sin(v), f(u)]
S (generic function with 1 method)

julia> us = range(a, b, length=100)
0.0:0.06346651825433926:6.283185307179586

julia> vs = range(0, 2pi, length=100)
0.0:0.06346651825433926:6.283185307179586

julia> ws = unzip(s.(us, vs'))
ERROR: UndefVarError: `s` not defined
Stacktrace:
 [1] top-level scope
   @ REPL[19]:1

julia> ws = unzip(S.(us, vs'))
([6.0 5.987920058831307 … 5.987920058831307 6.0; 6.126847839313129 6.114512512405056 … 6.114512512405056 6.126847839313129; … ; 5.873152160686871 5.861327605257557 … 5.861327605257557 5.873152160686871; 5.999999999999999 5.987920058831306 … 5.987920058831306 5.999999999999999], [0.0 0.380543517939387 … -0.3805435179393871 -1.4695761589768238e-15; 0.0 0.3885887051085917 … -0.38858870510859184 -1.50064491905554e-15; … ; 0.0 0.37249833077018235 … -0.3724983307701824 -1.4385073988981077e-15; 0.0 0.38054351793938695 … -0.38054351793938707 -1.4695761589768236e-15], [2.0 2.0 … 2.0 2.0; 1.9959733529437689 1.9959733529437689 … 1.9959733529437689 1.9959733529437689; … ; 1.9959733529437689 1.9959733529437689 … 1.9959733529437689 1.9959733529437689; 2.0 2.0 … 2.0 2.0])
julia> surface(ws...), zlims = (-6,6), legend=false)
ERROR: syntax: extra token ")" after end of expression
Stacktrace:
 [1] top-level scope
   @ none:1
julia> surface(2s..., zlims = (-6,6), legend=false)
ERROR: UndefVarError: `s` not defined
Stacktrace:
 [1] top-level scope
   @ REPL[22]:1

julia> surface(ws..., zlims = (-6,6), legend=false)
julia> plot!([0,0], [0,0], [-3,3], color=:red, linewidth=5)
julia> S(u,v) = [g(u), f(u)*cos(v), f(u)*sin(v)]
S (generic function with 1 method)

julia> us = range(a, b, length=100)
0.0:0.06346651825433926:6.283185307179586

julia> vs = range(0, 2pi, length=100)
0.0:0.06346651825433926:6.283185307179586

julia> ws = unzip(S.(us, vs'))
([6.0 6.0 … 6.0 6.0; 6.126847839313129 6.126847839313129 … 6.126847839313129 6.126847839313129; … ; 5.873152160686871 5.873152160686871 … 5.873152160686871 5.873152160686871; 5.999999999999999 5.999999999999999 … 5.999999999999999 5.999999999999999], [2.0 1.9959733529437689 … 1.9959733529437689 2.0; 1.9959733529437689 1.9919548128307956 … 1.9919548128307956 1.9959733529437689; … ; 1.9959733529437689 1.9919548128307956 … 1.9919548128307956 1.9959733529437689; 2.0 1.9959733529437689 … 1.9959733529437689 2.0], [0.0 0.126847839313129 … -0.12684783931312904 -4.898587196589413e-16; 0.0 0.12659245357374926 … -0.1265924535737493 -4.888724755731994e-16; … ; 0.0 0.12659245357374926 … -0.1265924535737493 -4.888724755731994e-16; 0.0 0.126847839313129 … -0.12684783931312904 -4.898587196589413e-16])

julia> surface(ws..., legend=false)
julia> plot!([3,9], [0,0], [0,0], color=:green, linewidth=5)

julia> f(x) = x^x
f (generic function with 1 method)

julia> a, b = 0, 3/2
(0, 1.5)
julia> val, _ = quadgk(x -> 2pi * f(x) * sqrt(1 + f'(x)^2), a, b)
(14.934256764843937, 1.717578376544558e-7)

julia> val
14.934256764843937

julia> g(u) = u
g (generic function with 1 method)

julia> f(u) = u^u
f (generic function with 1 method)
julia> S(u,v) = [g(u), f(u)*cos(v), f(u)*sin(v)]
S (generic function with 1 method)

julia> us = range(0, 3/2, length=100)
0.0:0.015151515151515152:1.5

julia> vs = range(0, pi, length=100)
0.0:0.03173325912716963:3.141592653589793

julia> ws = unzip(S.(us,vs'))
([0.0 0.0 … 0.0 0.0; 0.015151515151515152 0.015151515151515152 … 0.015151515151515152 0.015151515151515152; … ; 1.4848484848484849 1.4848484848484849 … 1.4848484848484849 1.4848484848484849; 1.5 1.5 … 1.5 1.5], [1.0 0.9994965423831851 … -0.9994965423831851 -1.0; 0.9384932481288237 0.938020756554724 … -0.938020756554724 -0.9384932481288237; … ; 1.7985477218411687 1.7976422292914027 … -1.7976422292914027 -1.7985477218411687; 1.8371173070873836 1.836192396386148 … -1.836192396386148 -1.8371173070873836], [0.0 0.03172793349806765 … 0.031727933498067656 1.2246467991473532e-16; 0.0 0.02977645136501682 … 0.029776451365016828 1.1493227523423668e-16; … ; 0.0 0.057064202511677674 … 0.05706420251167769 2.2025857106665516e-16; 0.0 0.058287935747417634 … 0.05828793574741765 2.2498198297827695e-16])

julia> surface(ws..., alpha=0.75)

julia> f(x) = x^x
f (generic function with 1 method)

julia> r0, r1 = f(0), f(3/2)
(1, 1.8371173070873836)
julia> pi * (r1 + r0) * sqrt((3/2)^2 + (r1-r0)^2)
15.310680925915081

julia> @syms M
(M,)
julia> ex = integrate(2PI * (1/x) * sqrt(1 +(-1/x)^2), (x, 1, M))
    ⎛       M                         1      ⎞
2⋅π⋅⎜- ─────────── + asinh(M) - ─────────────⎟ - 2⋅π⋅(-√2 + log(1 + √2))
    ⎜     ________                   ________⎟
    ⎜    ╱  2                       ╱  2     ⎟
    ⎝  ╲╱  M  + 1               M⋅╲╱  M  + 1 ⎠

julia> limit(asinh(M), M => oo)
∞

julia> limit(ex, M => 00)
-∞

julia> g(t) = 2(1 + cos(t)) * cos(t)
g (generic function with 1 method)

julia> f(t) = 2(1 + cos(t)) * sin(t)
f (generic function with 1 method)

julia> plot(g, f, 0, 1pi)

julia>